


CREATE TABLE  "USAGER" 
   (	
    "USAGER_ID" NUMBER NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(80) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(100) NOT NULL ENABLE, 
	 CONSTRAINT "USAGER_PK" PRIMARY KEY ("USAGER_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "USAGER__UN" UNIQUE ("USERNAME")
  USING INDEX  ENABLE
   )
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "USAGER_TR" BEFORE 
    INSERT ON usager 
    FOR EACH ROW 
     WHEN ( 
        new.usager_id IS NULL 
    ) BEGIN 
    :new.usager_id := usager_sq.nextval; 
END; 

/
ALTER TRIGGER  "USAGER_TR" ENABLE
/
CREATE TABLE  "ROLE" 
   (	
    "ROLE_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(20) NOT NULL ENABLE, 
	 CONSTRAINT "ROLE_PK" PRIMARY KEY ("ROLE_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "ROLE__UN" UNIQUE ("NOM")
  USING INDEX  ENABLE
   )
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "ROLE_TR" BEFORE 
    INSERT ON role 
    FOR EACH ROW 
     WHEN ( 
        new.role_id IS NULL 
    ) BEGIN 
    :new.role_id := role_sq.nextval; 
END; 

/
ALTER TRIGGER  "ROLE_TR" ENABLE
/


CREATE TABLE  "USAGER_ROLE" 
   (	
    "USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"ROLE_ROLE_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "USAGER_ROLE_PK" PRIMARY KEY ("USAGER_USAGER_ID", "ROLE_ROLE_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "USAGER_ROLE" ADD CONSTRAINT "USAGER_ROLE_ROLE_FK" FOREIGN KEY ("ROLE_ROLE_ID")
	  REFERENCES  "ROLE" ("ROLE_ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "USAGER_ROLE" ADD CONSTRAINT "USAGER_ROLE_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE TABLE  "PROP" 
   (	
    "PROP_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"PRENOM" VARCHAR2(50) NOT NULL ENABLE, 
	"TELEPHONE" VARCHAR2(14) NOT NULL ENABLE, 
	"USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50) NOT NULL ENABLE, 
	 CONSTRAINT "PROP_PK" PRIMARY KEY ("PROP_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "PROP" ADD CONSTRAINT "PROP_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE UNIQUE INDEX  "PROP__IDX" ON  "PROP" ("USAGER_USAGER_ID")
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "PROP_TR" BEFORE 
    INSERT ON prop 
    FOR EACH ROW 
     WHEN ( 
        new.prop_id IS NULL 
    ) BEGIN 
    :new.prop_id := prop_sq.nextval; 
END; 

/
ALTER TRIGGER  "PROP_TR" ENABLE
/


CREATE TABLE  "REPARTITEUR" 
   (	
    "REPARTITEUR_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"PRENOM" VARCHAR2(50) NOT NULL ENABLE, 
	"TELEPHONE" VARCHAR2(14) NOT NULL ENABLE, 
	"USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50) NOT NULL ENABLE, 
	 CONSTRAINT "REPARTITEUR_PK" PRIMARY KEY ("REPARTITEUR_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "REPARTITEUR" ADD CONSTRAINT "REPARTITEUR_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE UNIQUE INDEX  "REPARTITEUR__IDX" ON  "REPARTITEUR" ("USAGER_USAGER_ID")
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "REP_TR" BEFORE 
    INSERT ON repartiteur 
    FOR EACH ROW 
     WHEN ( 
        new.repartiteur_id IS NULL 
    ) BEGIN 
    :new.repartiteur_id := rep_sq.nextval; 
END; 

/
ALTER TRIGGER  "REP_TR" ENABLE
/




CREATE TABLE  "ADMIN" 
   (	
    "ADMIN_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"PRENOM" VARCHAR2(50) NOT NULL ENABLE, 
	"TELEPHONE" VARCHAR2(14) NOT NULL ENABLE, 
	"USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50) NOT NULL ENABLE, 
	 CONSTRAINT "ADMIN_PK" PRIMARY KEY ("ADMIN_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "ADMIN" ADD CONSTRAINT "ADMIN_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE UNIQUE INDEX  "ADMIN__IDX" ON  "ADMIN" ("USAGER_USAGER_ID")
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "ADMIN_TR" BEFORE 
    INSERT ON admin 
    FOR EACH ROW 
     WHEN ( 
        new.admin_id IS NULL 
    ) BEGIN 
    :new.admin_id := admin_sq.nextval; 
END; 

/
ALTER TRIGGER  "ADMIN_TR" ENABLE
/


CREATE TABLE  "CHAUFFEUR" 
   (	
    "CHAUFFEUR_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(40) NOT NULL ENABLE, 
	"PRENOM" VARCHAR2(40) NOT NULL ENABLE, 
	"ADRESSE_DOMICILE" VARCHAR2(100) NOT NULL ENABLE, 
	"TELEPHONE" VARCHAR2(14) NOT NULL ENABLE, 
	"PERMIS_CONDUIRE" VARCHAR2(18) NOT NULL ENABLE, 
	"START_SHIFT" TIMESTAMP (6), 
	"END_SHIFT" TIMESTAMP (6), 
	"LONGITUDE" FLOAT(126), 
	"LATITUDE" FLOAT(126), 
	"USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(200) NOT NULL ENABLE, 
	 CONSTRAINT "CHAUFFEUR_PK" PRIMARY KEY ("CHAUFFEUR_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "CHAUFFEUR__UN" UNIQUE ("PERMIS_CONDUIRE")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "CHAUFFEUR" ADD CONSTRAINT "CHAUFFEUR_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE UNIQUE INDEX  "CHAUFFEUR__IDX" ON  "CHAUFFEUR" ("USAGER_USAGER_ID")
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "CHAUFFEUR_TR" BEFORE 
    INSERT ON chauffeur 
    FOR EACH ROW 
     WHEN ( 
        new.chauffeur_id IS NULL 
    ) BEGIN 
    :new.chauffeur_id := chauffeur_sq.nextval; 
END; 

/
ALTER TRIGGER  "CHAUFFEUR_TR" ENABLE
/


CREATE TABLE  "HORAIRE" 
   (	
    "HORAIRE_ID" NUMBER NOT NULL ENABLE, 
	"START_DATE_TIME" DATE NOT NULL ENABLE, 
	"END_DATE_TIME" DATE NOT NULL ENABLE, 
	"DAY_OF_THE_WEEK" VARCHAR2(10) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(200), 
	"CHAUFFEUR_CHAUFFEUR_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "HORAIRE_PK" PRIMARY KEY ("HORAIRE_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "HORAIRE" ADD CONSTRAINT "HORAIRE_CHAUFFEUR_FK" FOREIGN KEY ("CHAUFFEUR_CHAUFFEUR_ID")
	  REFERENCES  "CHAUFFEUR" ("CHAUFFEUR_ID") ON DELETE CASCADE ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "HORAIRE_TR" BEFORE 
    INSERT ON horaire 
    FOR EACH ROW 
     WHEN ( 
        new.horaire_id IS NULL 
    ) BEGIN 
    :new.horaire_id := horaire_sq.nextval; 
END; 

/
ALTER TRIGGER  "HORAIRE_TR" ENABLE
/





CREATE TABLE  "CLIENT" 
   (	
    "CLIENT_ID" NUMBER NOT NULL ENABLE, 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"PRENOM" VARCHAR2(50) NOT NULL ENABLE, 
	"USAGER_USAGER_ID" NUMBER NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50) NOT NULL ENABLE, 
	"TELEPHONE" VARCHAR2(12) NOT NULL ENABLE, 
	 CONSTRAINT "CLIENT_PK" PRIMARY KEY ("CLIENT_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "CLIENT_CON" UNIQUE ("USAGER_USAGER_ID")
  USING INDEX (CREATE UNIQUE INDEX  "CLIENT__IDX" ON  "CLIENT" ("USAGER_USAGER_ID") 
  )  ENABLE, 
	 CONSTRAINT "CLIENT_EMAIL_UNIQUE" UNIQUE ("EMAIL")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "CLIENT" ADD CONSTRAINT "CLIENT_USAGER_FK" FOREIGN KEY ("USAGER_USAGER_ID")
	  REFERENCES  "USAGER" ("USAGER_ID") ON DELETE CASCADE ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "CLIENT_TR" BEFORE 
    INSERT ON client 
    FOR EACH ROW 
     WHEN ( 
        new.client_id IS NULL 
    ) BEGIN 
    :new.client_id := client_sq.nextval; 
END; 

/
ALTER TRIGGER  "CLIENT_TR" ENABLE
/


CREATE TABLE  "VOITURE" 
   (	
    "VOITURE_ID" NUMBER NOT NULL ENABLE, 
	"MATRICULE" VARCHAR2(10) NOT NULL ENABLE, 
	"MARQUE" VARCHAR2(30), 
	"MODELE" VARCHAR2(50), 
	"NOMBRE_SEATS" NUMBER, 
	"TYPE" VARCHAR2(200) NOT NULL ENABLE, 
	"CHAUFFEUR_CHAUFFEUR_ID" NUMBER NOT NULL ENABLE, 
	"PROP_PROP_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "VOITURE_PK" PRIMARY KEY ("VOITURE_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "VOITURE__UN" UNIQUE ("MATRICULE")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "VOITURE" ADD CONSTRAINT "VOITURE_CHAUFFEUR_FK" FOREIGN KEY ("CHAUFFEUR_CHAUFFEUR_ID")
	  REFERENCES  "CHAUFFEUR" ("CHAUFFEUR_ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "VOITURE" ADD CONSTRAINT "VOITURE_PROP_FK" FOREIGN KEY ("PROP_PROP_ID")
	  REFERENCES  "PROP" ("PROP_ID") ON DELETE CASCADE ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "VOITURE_TR" BEFORE 
    INSERT ON voiture 
    FOR EACH ROW 
     WHEN ( 
        new.voiture_id IS NULL 
    ) BEGIN 
    :new.voiture_id := voiture_sq.nextval; 
END; 

/
ALTER TRIGGER  "VOITURE_TR" ENABLE
/








CREATE TABLE  "COURSE" 
   (	
    "COURSE_ID" NUMBER,
	"DATECOURSE" DATE NOT NULL ENABLE,
	"TIME_CREATED" TIMESTAMP (6) NOT NULL ENABLE,
	"CLIENT_CLIENT_ID" NUMBER NOT NULL ENABLE, 
	"ADRESSE_DEPART" VARCHAR2(100) NOT NULL ENABLE, 
	"ADRESSE_DESTINATION" VARCHAR2(100) NOT NULL ENABLE, 
	"NOMBRE_PASSAGERS" NUMBER NOT NULL ENABLE, 
	"IMMEDIAT" CHAR(1) NOT NULL ENABLE, 
	"ENATTENTE" CHAR(1),
	"CHAUFFEUR_CHAUFFEUR_ID" NUMBER,
    "PRIX" NUMBER, 
	"DUREE" NUMBER, 
	"DISTANCE" NUMBER, 
    "START_TIME" TIMESTAMP (6), 
	"END_TIME" TIMESTAMP (6), 
	 CONSTRAINT "COURSE_PK" PRIMARY KEY ("COURSE_ID")
  USING INDEX  ENABLE
   )
   ALTER TABLE  "COURSE" ADD CONSTRAINT "COURSE_CHAUFFEUR_FK" FOREIGN KEY ("CHAUFFEUR_CHAUFFEUR_ID")
	  REFERENCES  "CHAUFFEUR" ("CHAUFFEUR_ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "COURSE" ADD CONSTRAINT "COURSE_CLIENT_FK" FOREIGN KEY ("CLIENT_CLIENT_ID")
	  REFERENCES  "CLIENT" ("CLIENT_ID") ON DELETE CASCADE ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "COURSE_TR" BEFORE 
    INSERT ON course 
    FOR EACH ROW 
     WHEN ( 
        new.course_id IS NULL 
    ) BEGIN 
    :new.course_id := course_sq.nextval; 
END; 

/
ALTER TRIGGER  "COURSE_TR" ENABLE
/


CREATE TABLE  "DISPONIBILITE" 
   (	
    "DISPONIBILITE_ID" NUMBER NOT NULL ENABLE, 
	"DATE_DEBUT" DATE NOT NULL ENABLE, 
	"DATE_FIN" DATE NOT NULL ENABLE, 
	"CHAUFFEUR_CHAUFFEUR_ID" NUMBER NOT NULL ENABLE, 
	"VOITURE_VOITURE_ID" NUMBER NOT NULL ENABLE, 
	"DISPONIBLE" CHAR(1), 
	"TEMPS_DISPONIBLE" TIMESTAMP (6), 
	 CONSTRAINT "DISPONIBILITE_PK" PRIMARY KEY ("DISPONIBILITE_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "DISPONIBILITE" ADD CONSTRAINT "DISPONIBILITE_CHAUFFEUR_FK" FOREIGN KEY ("CHAUFFEUR_CHAUFFEUR_ID")
	  REFERENCES  "CHAUFFEUR" ("CHAUFFEUR_ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "DISPONIBILITE" ADD CONSTRAINT "DISPONIBILITE_VOITURE_FK" FOREIGN KEY ("VOITURE_VOITURE_ID")
	  REFERENCES  "VOITURE" ("VOITURE_ID") ON DELETE CASCADE ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "DISPONIBLE_TR" BEFORE 
    INSERT ON disponibilite 
    FOR EACH ROW 
     WHEN ( 
        new.disponibilite_id IS NULL 
    ) BEGIN 
    :new.disponibilite_id := disponible_sq.nextval; 
END; 

/
ALTER TRIGGER  "DISPONIBLE_TR" ENABLE
/


